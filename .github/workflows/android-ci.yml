name: Android CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Generate build number
      id: buildnumber
      uses: onyxmueller/build-tag-number@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        prefix: 'android'
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Update version code and name
      run: |
        echo "Build number: ${{ steps.buildnumber.outputs.build_number }}"
        sed -i "s/versionCode = .*/versionCode = ${{ steps.buildnumber.outputs.build_number }}/g" app/build.gradle.kts
        sed -i "s/versionName = .*/versionName = \"1.0.${{ steps.buildnumber.outputs.build_number }}\"/g" app/build.gradle.kts
    
    # Для Pull Requests собираем debug-версию
    - name: Build debug APK for Pull Requests
      if: github.event_name == 'pull_request'
      run: ./gradlew assembleDebug
    
    # Для master/main собираем release-версию
    - name: Build release APK for master/main
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      run: ./gradlew assembleRelease
    
    # Переименовываем APK файлы, добавляя номер версии
    - name: Rename APK files
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          mkdir -p renamed_apk
          cp app/build/outputs/apk/debug/app-debug.apk renamed_apk/app-debug-1.0.${{ steps.buildnumber.outputs.build_number }}.apk
        elif [ "${{ github.ref }}" == "refs/heads/master" ] || [ "${{ github.ref }}" == "refs/heads/main" ]; then
          mkdir -p renamed_apk
          cp app/build/outputs/apk/release/app-release.apk renamed_apk/app-release-1.0.${{ steps.buildnumber.outputs.build_number }}.apk
        fi
    
    # Загружаем debug APK для Pull Requests
    - name: Upload Debug APK
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-${{ steps.buildnumber.outputs.build_number }}
        path: renamed_apk/app-debug-1.0.${{ steps.buildnumber.outputs.build_number }}.apk
    
    # Загружаем release APK для master/main
    - name: Upload Release APK
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      uses: actions/upload-artifact@v4
      with:
        name: app-release-${{ steps.buildnumber.outputs.build_number }}
        path: renamed_apk/app-release-1.0.${{ steps.buildnumber.outputs.build_number }}.apk
    
    # Создаем релиз только для master/main с переименованным APK
    - name: Create Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      uses: ncipollo/release-action@v1
      with:
        artifacts: "renamed_apk/app-release-1.0.${{ steps.buildnumber.outputs.build_number }}.apk"
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: v1.0.${{ steps.buildnumber.outputs.build_number }}
        name: Release v1.0.${{ steps.buildnumber.outputs.build_number }}
        body: |
          Автоматическая релизная сборка из ветки master
          
          Номер сборки: ${{ steps.buildnumber.outputs.build_number }}
          Версия: 1.0.${{ steps.buildnumber.outputs.build_number }}
          Коммит: ${{ github.sha }}
          
          Примечание: Эта сборка использует релизную конфигурацию с дебажной подписью.
        draft: false
        prerelease: false
        makeLatest: true 
